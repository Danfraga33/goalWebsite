// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int             @id @default(autoincrement())
  email            String          @unique
  name             String?
  Notes            Note[]
  StudyNotes       StudyNotes[]
  NavCategory      NavCategory[]
  NavItem          NavItem[]
  JournalEntry     JournalEntry[]
  WeeklySchedule   WeeklySchedule? @relation(fields: [weeklyScheduleId], references: [id])
  weeklyScheduleId Int?
  DailyTask        DailyTask[]
  Topics           Topic[]
}

model WeeklySchedule {
  id          Int         @id @default(autoincrement())
  day         DaysOfWeeks
  time        String
  description String
  userId      Int
  user        User[]
}

model DailyTask {
  id          Int    @id @default(autoincrement())
  time        String @default("12:00PM")
  description String
  user        User   @relation(fields: [userId], references: [id])
  userId      Int
}

model NavItem {
  id         Int         @id @default(autoincrement())
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
  title      String
  url        String
  isActive   Boolean
  category   NavCategory @relation(fields: [categoryId], references: [id])
  categoryId Int
}

model JournalEntry {
  id      Int      @id @default(autoincrement())
  userId  Int
  user    User     @relation(fields: [userId], references: [id])
  date    DateTime @default(now())
  content String?

  @@unique([userId, date])
}

model Topic {
  id       Int       @id @default(autoincrement())
  title    String
  sections Section[]
  userId   Int
  user     User      @relation(fields: [userId], references: [id])
}

model Section {
  id           Int         @id @default(autoincrement())
  title        String
  sectionNotes StudyNote[]
  topic        Topic?      @relation(fields: [topicId], references: [id])
  topicId      Int?
}

model StudyNote {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  sectionId Int?
  section   Section? @relation(fields: [sectionId], references: [id])
}

model NavCategory {
  id     Int       @id @default(autoincrement())
  title  String
  url    String
  items  NavItem[]
  User   User?     @relation(fields: [userId], references: [id])
  userId Int?
}

enum NoteCategory {
  Flow
  IncomeOverview
  InvestOverview
  Dashboard
  Education
  SaaS
  SavingsAccount
  ECommerce
  Job
  Agency
  Dividends
  RentalIncome
  TaxStrategies
  PublicEquities
  RealEstate
  VentureCapital
  WeeklySchedule
  Journal
  DeepDive
}

enum DaysOfWeeks {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}

model Note {
  id        Int          @id @default(autoincrement())
  title     String
  category  NoteCategory
  content   String?
  createdAt DateTime     @default(now())
  user      User         @relation(fields: [userId], references: [id])
  userId    Int
}

model StudyNotes {
  id      Int     @id @default(autoincrement())
  User    User    @relation(fields: [userId], references: [id])
  userId  Int
  topic   String
  section String
  content String?
}
